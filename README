Both will most of the time give wrong results, due to
restrictions in child processes, namely each child has
to wait minimum of 2 seconds (one on entering and one on leaving the critical section)
plus up to 3 seconds which each child process have to
spend waiting.
also, each child process has only five attempts to entry critical section,
which is most of the time not happening, hence the error in final result.

if instead of sem_trywait, just sem_wait was used, each child process would get a chance
to get into critical section and finial result would be correct in bot part one and two.

in files adder_1.log and adder_2.log are log files generated by both first and second method.
stdout and stderr outputs are logged as well in ther corresponding files with .txt extension.

anther important point is handling of more than n processes at a time, in this case 20.
it is not a trivial problem, and since it is not specified how to handle that case,
it is handled by terminating all processes and exiting.
trivial solution would be to frok() 20 times, and from then on call wait(NULL) before every new fork()
to make sure no more than 20 processes are running, and then after last frok() call wait(NULL) 20 times.
however this solution makes little sense.

